read.delim2("test_data.txt")
file_name = "test_data.txt"
read.delim2(file = file_name)
?read.delim2
read.delim2(file = file_name,
sep = "  ",
skip = 6)
file_name <- "test_data.txt"
read.delim2(file = file_name,
sep = "  ",
skip = 6)
file_name <- test_data.txt"'
read.delim2(file = file_name,
sep = "  ",
skip = 6)
file_name <- "test_data.txt"
file_name
file_name <- "test_data.txt" # ABACUS file name
skip_lines = 6; #number of lines to skip
read.delim2(file = file_name,
sep = "  ",
skip = 6,
header = TRUE)
read.delim2(file = file_name,
sep = " ",
skip = 6,
header = TRUE)
abakus_data <- read.delim2(file = file_name,
sep = " ",
skip = 6,
header = TRUE)
View(abakus_data)
abakus_data <- read.delim2(file = file_name,
sep = ";",
skip = 6,
header = TRUE)
View(abakus_data)
plot(abakus_data$X1.0)
rm(file_name)
rm(file_name)
clear
rm(all)
rm(skip_lines) # remove variables
file_name <- "test_data.txt" # ABACUS file name
skip_lines = 6; #number of lines to skip
# Import text file and convert to a data frame
abakus_data <- read.delim2(file = file_name,
sep = ";",
skip = 6,
header = TRUE)
rm(file_name) # remove variables
rm(skip_lines) # remove variables
length((abakus_data))
length((abakus_data), 2)
size((abakus_data))
?length
length(abakus_data$Index)
barplot(abakus_data)
barplot(height = abakus_data[1,:])
barplot(height = abakus_data[1,])
abakus_data[1,:]
abakus_data[1,]
abakus_data[2,]
sum(abakus_data)
colSum(abakus_data)
colSums(abakus_data)
cumulative_distribution <- colSums(abakus_data)
barplot(cumulative_distribution)
View(abakus_data)
abakus_data[3,]
abakus_data[2,]
last_index <- length(abakus_data$Index) # last line
abakus_data[2:last_index,]
cumulative_distribution <- colSums(abakus_data[2:last_index,])
cumulative_distribution <- colSums(abakus_data[2:last_index,3:34])
length((abakus_data))
cumulative_distribution <- colSums(abakus_data[start_row_index:last_index,start_column_index:last_column_index])
start_row_index <- 3 # first line of interest
last_row_index <- length(abakus_data$Index) # last line of interest
start_column_index <- 3 # first channel of interest
last_column_index <- length((abakus_data)) #last channel of interest
# Calculate cumulative distribution
cumulative_distribution <- colSums(abakus_data[start_row_index:last_index,start_column_index:last_column_index])
barplot(cumulative_distribution)
density(cumulative_distribution)
plot(density(cumulative_distribution))
barplot(cumulative_distribution)
barplot(cumulative_distribution,
width = 2)
barplot(cumulative_distribution,
width = 3)
barplot(cumulative_distribution,
space = 0)
barplot(cumulative_distribution,
space = 0,
border = NA)
barplot(cumulative_distribution,
space = 0,
border = NA,
density = TRUE)
barplot(cumulative_distribution,
space = 0,
border = NA)
barplot(cumulative_distribution,
space = 0,
border = NA,
ylab = "Counts",
xlab = "Diameter (\mu m)")
barplot(cumulative_distribution,
space = 0,
border = NA,
ylab = "Counts",
xlab = "Diameter ($\mu$ m)")
barplot(cumulative_distribution,
space = 0,
border = NA,
ylab = "Counts",
xlab = expression(paste("Diameter ", mu)))
barplot(cumulative_distribution,
space = 0,
border = NA,
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")))
size_classes <- [0.8 0.9 1.4]
size_classes <- c(0.8 0.9 1.4)
size_classes <- c(0.8, 0.9, 1.4)
size_classes <- c(0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.6,1.8,2.0,2.2,2.4,2.6,2.9,3.2,3.5,3.9,4.3,4.8,5.3,5.8,6.4,7.1,7.8,8.6,9.5,10.5,11.6,12.8,14.1,15.5,80.0)
barplot(cumulative_distribution,
names.arg = size_classes,
space = 0,
border = NA,
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")))
density(cumulative_distribution)
distribution_density <- density(cumulative_distribution)
lines(distribution_density)
lines(distribution_density)
plot(distribution_density)
plot(x = size_classes, y = cumulative_distribution)
lines(x = size_classes, y = cumulative_distribution)
lines(x = size_classes, y = cumulative_distribution, type = 'l')
plot(x = size_classes, y = cumulative_distribution, type = 'l')
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy")
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy",
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")))
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy",
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")),
cex=2,col="steelblue3",
)
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy",
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")),
lwd=2,col="steelblue3",
)
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy",
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")),
lwd=2,
col="steelblue3",
xaxt="n",yaxt="n"
)
plot(x = size_classes, y = cumulative_distribution,
type = 'l',
log = "xy",
ylab = "Counts",
xlab = expression(paste("Diameter (", mu, "m)")),
lwd=2,
col="steelblue3",
)
grid()
